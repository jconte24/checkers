import java.util.*;
import java.util.concurrent.TimeUnit;
import java.io.*;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 * @version 2.0
 * @author Dan Martineau
 */
public class FrontEndSimulator2 extends JFrame {

    //MyFields
    private ControlUnit control;
    private boolean connected;
    private File inFile;
	private File outFile;
    private Scanner in;
    private String ip;
	private ArrayList<Byte> list;
	private Thread appThread;
	private boolean run;
	private String status;
	private String chat;
	private int score;

    /**
     * Creates new form FrontEndSimulator
     */
    public FrontEndSimulator2() {
        initComponents();
        connected = false;
        in = null;
        ip = "";
		list = new ArrayList<Byte>();
		run = false;

		jTextArea1.insert(".",0);

		appThread = new Thread(new Runnable() {
            @Override public void run() {

                for(;;)
				{
					if(connected)
					{	
						status = control.getStatus();
						chat = control.getChat();
						score = control.getMyScore();
						
						setTitle("Player " + control.getMyID() + "  |  My Score: " + score);
						
						if(status != null)
						{
							jLabel1.setText(status );
							status = null;
						}
						if(chat != null)
						{
							jTextArea2.append("\nOpponent: " + chat);
							chat = null;
						}
					}
						
					if(connected && control.engaged())
					{	
						jTextArea1.selectAll();
						jTextArea1.replaceSelection(control.toString());
					}
					
					if(run==true)
					{
						try
						{
							runGame();
						}
						catch(Exception e)
						{
							jLabel1.setText("ERROR: GAME NOT RUN.");
						}
					}
					
					try
					{
						TimeUnit.MILLISECONDS.sleep(500);
					}
					catch(Exception e)
					{
						System.out.println(e);
					}
				}
            }
        });

		appThread.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jTextField5 = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setText("                                                                                    Welcome to Checkers!");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 797, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTextField3.setText("127.0.0.1");

        jButton3.setText("Connect");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel4.setText("Not Connected");

        jTextField4.setText("5142");

        jButton4.setText("  Move  ");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
		
		jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
               jTextField2ActionPerformed(evt);
            }
        });

        jButton5.setText("Run");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Menu");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Send");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jLabel6.setText("Chat");

        jLabel7.setText("Game Options");

        jLabel8.setText("Run Game From Input File");

        jLabel9.setText("Coordinates");

        jLabel10.setText("   DHCP Address of Server");

        jLabel11.setText("          Input File");

        jLabel12.setText("         Output File");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jButton3)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton7))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(175, 175, 175)
                        .addComponent(jLabel6))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addComponent(jButton6))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jTextField2)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(86, 86, 86))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel11)
                .addGap(6, 6, 6)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addGap(4, 4, 4)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3)
                    .addComponent(jLabel4))
                .addGap(68, 68, 68)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addGap(6, 6, 6)
                .addComponent(jButton6)
                .addGap(34, 34, 34)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7))
                .addContainerGap())
        );

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel5.setText("Board");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(206, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(191, 191, 191))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>

    private void formWindowClosing(java.awt.event.WindowEvent evt) {
        if(connected)
            control.endAndExit();
    }

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {
        try
        {
			connect(jTextField3.getText());
			if(connected)
				this.setTitle("Player " + control.getMyID());
        }
        catch(Exception e)
        {
            jLabel1.setText("FAILED TO CONNECT!");
        }
    }
	
	private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {
        try
        {
			export();
			jLabel1.setText("The game has been exported to " + jTextField2.getText());
        }
        catch(Exception e)
        {
            jLabel1.setText("FAILED TO EXPORT!");
        }
    }

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {
        move(jTextField4.getText());
    }

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {
		try
		{
			jLabel1.setText("Running game from file. Please be patient.");
			run = true;
		}
		catch(Exception e)
		{
			jLabel1.setText("ERROR: GAME NOT RUN!");
		}
    }

    /*private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {
        control.newOpponent();
		jTextArea2.selectAll();
		jTextArea2.replaceSelection(" ");
    }*/
	
	private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {
		try
		{
			int option = 69;
			
			if(connected && control.engaged() && !control.gameOver())
			{
				String[] options = {"New Opp", "Resign", "Draw"};
				option = JOptionPane.showOptionDialog(null, "Select an option: ", "menu", JOptionPane.DEFAULT_OPTION, JOptionPane.PLAIN_MESSAGE, null, options, options[0]);
				
				switch(option)
				{
					case 0:
						control.newOpponent();
						break;
					case 1:
						control.resign();
						jLabel1.setText("You have resigned from the game. Opponent winz. #NotLit");
						break;
					case 2:
						control.draw();
				}
			}
			else if(connected && control.engaged() && control.gameOver())
			{
				String[] options = {"New Opp", "New Game"};
				option = JOptionPane.showOptionDialog(null, "Select an option: ", "menu", JOptionPane.DEFAULT_OPTION, JOptionPane.PLAIN_MESSAGE, null, options, options[0]);
				
				switch(option)
				{
					case 0:
						control.newOpponent();
						break;
					case 1:
						control.newGame();
						jLabel1.setText("Request sent.");
				}
			}
			else if(connected && !control.engaged())
			{
				String[] options = {"New Opp"};
				option = JOptionPane.showOptionDialog(null, "Select an option: ", "menu", JOptionPane.DEFAULT_OPTION, JOptionPane.PLAIN_MESSAGE, null, options, options[0]);
				
				if(option == 0)
					control.newOpponent();
			}
			else if(!connected)
			{
				jLabel1.setText("CONNECT TO SERVER FIRST!");
			}
		}
		catch(Exception e)
		{
			System.out.println(e);
		}
    }

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {
        if(connected && control.engaged() && (jTextField5.getText()!=null || !jTextField5.getText().equals("") || !jTextField5.getText().equals(" ")))
        {
            control.sendMessage(jTextField5.getText());
            jLabel1.setText("Message sent to opponent.");
            jTextArea2.append("\nMe: " + jTextField5.getText());
        }
    }

    public static void main(String args[]) {
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrontEndSimulator2().setVisible(true);
            }
        });
    }

    private void connect(String ip) throws Exception
    {
        if(!connected)
        {
            ip = jTextField3.getText();
            if(ip!=null && !ip.equals("") && !ip.equals(" "))
            {
                control = new ControlUnit(ip);
				
				TimeUnit.MILLISECONDS.sleep(250);
				
				if(!control.getMyID().equals("jjj") && control.getMyID()!=null)
				{
					jLabel4.setText("Connected");
					jLabel1.setText("Connection Established.");
					connected = true;
				}
				else
				{
					jLabel1.setText("Failed to connect. Make sure that server is running and that you entered the correct DHCP.");
					return;
				}
            }
            else
                jLabel1.setText("INVALID DHCP ENTERED!");
        }
        else
            jLabel1.setText("ALREADY CONNTECTED!");
    }

    private void runGame() throws Exception
    {
        if(connected && control.engaged())
        {
            boolean moved;
            byte r1;
            byte r2;
            byte c1;
            byte c2;
            String filename = jTextField1.getText();
			
			jLabel1.setText("Running game from file.");

            inFile = new File(filename);
            if(inFile.exists())
            {
                boolean found = true;

                try
                {
                    in = new Scanner(inFile);
                }
                catch(FileNotFoundException e)
                {
                    found = false;
                }

                if(found && in.hasNext())
                {
                    control.printBoard();

                    System.out.print("Waiting for opponent to be assigned");

                    while(!control.engaged())
                    {
                        System.out.print(".");
                        TimeUnit.SECONDS.sleep(1);
                    }

                    while(in.hasNext())
					{
						String line = in.nextLine();
						
						//make sure we don't use an ip address as a move
						if(line.length() > 1)
							r1 = Byte.parseByte(in.nextLine());
						else
							r1 = Byte.parseByte(line);
							
                        list.add(r1);

                        r2 = Byte.parseByte(in.nextLine());
                        list.add(r2);

                        c1 = Byte.parseByte(in.nextLine());
                        list.add(c1);

                        c2 = Byte.parseByte(in.nextLine());
                        list.add(c2);

                        if(!control.getMyTurn())
                            System.out.print("\nWaiting for my turn");
						

                        while(!control.getMyTurn())
                        {
                            System.out.print(".");
                            TimeUnit.SECONDS.sleep(1);
                        }

                        moved = control.move(r1, r2, c1, c2);

                        if(moved)
                        {
                            System.out.println("\nMove successful!");
                            control.printBoard();
							jTextArea1.selectAll();
							jTextArea1.replaceSelection(control.toString());
                        }
                        else
                            System.out.println("\nMove invalid!");
                    }
                }
            }
        }
        else
           jLabel1.setText("CANNOT MOVE IF YOU ARE NOT CONNECTED AND PAIRED!");
	   
	   run = false;
	   jLabel1.setText("Reached end of file. Continue Manually.");
	   in.close();
    }

    private void move(String coor)
    {
		jLabel1.setText(" ");
		
		boolean moved;
        boolean myTurn = control.getMyTurn();

        if(connected && control.engaged() && !control.gameOver() && control.getMyTurn())
        {
            byte r1 = Byte.parseByte(coor.substring(0,1));
			list.add(r1);
            byte r2 = Byte.parseByte(coor.substring(1,2));
			list.add(r2);
            byte c1 = Byte.parseByte(coor.substring(2,3));
			list.add(c1);
            byte c2 = Byte.parseByte(coor.substring(3));
			list.add(c2);

            moved = control.move(r1, r2, c1, c2);
			
			if(moved)
				jLabel1.setText("Piece has been moved.");
        }
		else if(control.gameOver())
			jLabel1.setText("Game is over, can no longer move.");
        else if(control.engaged() && !myTurn)
            jLabel1.setText("IT'S NOT YOUR TURN!");
        else
            jLabel1.setText("CANNOT MOVE IF YOU ARE NOT CONNECTED AND PAIRED!");

    }
	
	private void export() throws Exception
	{
		jLabel1.setText(" ");
		
		File outFile = new File(jTextField2.getText());
		PrintWriter outputFile = new PrintWriter(outFile);
		
		for(int i = 0; i < list.size(); i++)
		{
			outputFile.println(list.get(i));
		}
		
		outputFile.close();
	}

    // Variables declaration - do not modify
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    // End of variables declaration
}
